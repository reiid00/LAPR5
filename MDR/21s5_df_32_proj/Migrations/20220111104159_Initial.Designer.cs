// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _21s5_df_32_proj.Infrastructure;

namespace _21s5_df_32_proj.Migrations
{
    [DbContext(typeof(_21s5_df_32_projDbContext))]
    [Migration("20220111104159_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("_21s5_df_32_proj")
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("_21s5_df_32_proj.Domain.EstadosHumor.EstadoHumor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("EstadoHumor");
                });

            modelBuilder.Entity("_21s5_df_32_proj.Domain.Pedidos.Pedido", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("_21s5_df_32_proj.Domain.Relations.Relation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserID1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserID2")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserID1");

                    b.HasIndex("UserID2");

                    b.ToTable("Relation");
                });

            modelBuilder.Entity("_21s5_df_32_proj.Domain.Tags.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("_21s5_df_32_proj.Domain.Tags.TagUtilizador", b =>
                {
                    b.Property<string>("TagId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UtilizadorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagId", "UtilizadorId");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("TagUtilizador");
                });

            modelBuilder.Entity("_21s5_df_32_proj.Domain.Utilizadores.Utilizador", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("EstadoHumorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoHumorId");

                    b.ToTable("Utilizador");
                });

            modelBuilder.Entity("_21s5_df_32_proj.Domain.EstadosHumor.EstadoHumor", b =>
                {
                    b.OwnsOne("_21s5_df_32_proj.Domain.EstadosHumor.DescricaoEstadoHumor", "DescricaoEstadoHumor", b1 =>
                        {
                            b1.Property<string>("EstadoHumorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("MyDescricao")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EstadoHumorId");

                            b1.ToTable("EstadoHumor");

                            b1.WithOwner()
                                .HasForeignKey("EstadoHumorId");
                        });

                    b.OwnsOne("_21s5_df_32_proj.Domain.EstadosHumor.Icon", "Icon", b1 =>
                        {
                            b1.Property<string>("EstadoHumorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("MyIcon")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EstadoHumorId");

                            b1.ToTable("EstadoHumor");

                            b1.WithOwner()
                                .HasForeignKey("EstadoHumorId");
                        });

                    b.OwnsOne("_21s5_df_32_proj.Domain.EstadosHumor.Nome", "Nome", b1 =>
                        {
                            b1.Property<string>("EstadoHumorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("MyName")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EstadoHumorId");

                            b1.ToTable("EstadoHumor");

                            b1.WithOwner()
                                .HasForeignKey("EstadoHumorId");
                        });

                    b.Navigation("DescricaoEstadoHumor");

                    b.Navigation("Icon");

                    b.Navigation("Nome");
                });

            modelBuilder.Entity("_21s5_df_32_proj.Domain.Pedidos.Pedido", b =>
                {
                    b.OwnsOne("_21s5_df_32_proj.Domain.Pedidos.DescricaoPedido", "DescricaoPedido", b1 =>
                        {
                            b1.Property<string>("PedidoId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("DescricaoUserFinal")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DescricaoUserInter")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PedidoId");

                            b1.ToTable("Pedido");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.OwnsOne("_21s5_df_32_proj.Domain.Pedidos.EstadoPedido", "EstadoPedido", b1 =>
                        {
                            b1.Property<string>("PedidoId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Estado")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PedidoId");

                            b1.ToTable("Pedido");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.OwnsOne("_21s5_df_32_proj.Domain.Pedidos.PedidoIntroducao", "PedidoIntroducao", b1 =>
                        {
                            b1.Property<string>("PedidoId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<bool>("AceiteFinal")
                                .HasColumnType("bit");

                            b1.Property<bool>("AceiteIntermedio")
                                .HasColumnType("bit");

                            b1.Property<string>("DescricaoIntroducao")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UserAutenticado")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UserIntermedio")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UserObjetivo")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PedidoId");

                            b1.ToTable("Pedido");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.OwnsOne("_21s5_df_32_proj.Domain.Pedidos.PedidoLigacao", "PedidoLigacao", b1 =>
                        {
                            b1.Property<string>("PedidoId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("RelacaoId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Strength")
                                .HasColumnType("int");

                            b1.Property<string>("UserID1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UserID2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("relacao")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PedidoId");

                            b1.HasIndex("RelacaoId");

                            b1.ToTable("Pedido");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");

                            b1.HasOne("_21s5_df_32_proj.Domain.Relations.Relation", "Relacao")
                                .WithMany()
                                .HasForeignKey("RelacaoId");

                            b1.Navigation("Relacao");
                        });

                    b.OwnsOne("_21s5_df_32_proj.Domain.Pedidos.TituloPedido", "TituloPedido", b1 =>
                        {
                            b1.Property<string>("PedidoId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("TtlPedido")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PedidoId");

                            b1.ToTable("Pedido");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.Navigation("DescricaoPedido");

                    b.Navigation("EstadoPedido");

                    b.Navigation("PedidoIntroducao");

                    b.Navigation("PedidoLigacao");

                    b.Navigation("TituloPedido");
                });

            modelBuilder.Entity("_21s5_df_32_proj.Domain.Relations.Relation", b =>
                {
                    b.HasOne("_21s5_df_32_proj.Domain.Utilizadores.Utilizador", "User1")
                        .WithMany()
                        .HasForeignKey("UserID1");

                    b.HasOne("_21s5_df_32_proj.Domain.Utilizadores.Utilizador", "User2")
                        .WithMany()
                        .HasForeignKey("UserID2");

                    b.OwnsOne("_21s5_df_32_proj.Domain.Relations.RelationStrength", "Strength", b1 =>
                        {
                            b1.Property<string>("RelationId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("RelationId");

                            b1.ToTable("Relation");

                            b1.WithOwner()
                                .HasForeignKey("RelationId");
                        });

                    b.OwnsMany("_21s5_df_32_proj.Domain.Relations.RelationType", "RelationTypes", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .UseIdentityColumn();

                            b1.Property<string>("RelationTypeId")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id");

                            b1.HasIndex("RelationTypeId");

                            b1.ToTable("RelationType");

                            b1.WithOwner()
                                .HasForeignKey("RelationTypeId");
                        });

                    b.Navigation("RelationTypes");

                    b.Navigation("Strength");

                    b.Navigation("User1");

                    b.Navigation("User2");
                });

            modelBuilder.Entity("_21s5_df_32_proj.Domain.Tags.Tag", b =>
                {
                    b.OwnsOne("_21s5_df_32_proj.Domain.Tags.TagTitulo", "Titulo", b1 =>
                        {
                            b1.Property<string>("TagId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("MyTitulo")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TagId");

                            b1.ToTable("Tag");

                            b1.WithOwner()
                                .HasForeignKey("TagId");
                        });

                    b.Navigation("Titulo");
                });

            modelBuilder.Entity("_21s5_df_32_proj.Domain.Tags.TagUtilizador", b =>
                {
                    b.HasOne("_21s5_df_32_proj.Domain.Tags.Tag", "Tag")
                        .WithMany("TagUtilizadores")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_21s5_df_32_proj.Domain.Utilizadores.Utilizador", "Utilizador")
                        .WithMany("TagUtilizadores")
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("_21s5_df_32_proj.Domain.Utilizadores.Utilizador", b =>
                {
                    b.HasOne("_21s5_df_32_proj.Domain.EstadosHumor.EstadoHumor", "EstadoHumor")
                        .WithMany()
                        .HasForeignKey("EstadoHumorId");

                    b.OwnsOne("_21s5_df_32_proj.Domain.Utilizadores.UtilizadorAvatar", "Avatar", b1 =>
                        {
                            b1.Property<string>("UtilizadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("myAvatar")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UtilizadorId");

                            b1.ToTable("Utilizador");

                            b1.WithOwner()
                                .HasForeignKey("UtilizadorId");
                        });

                    b.OwnsOne("_21s5_df_32_proj.Domain.Utilizadores.UtilizadorCidade", "Cidade", b1 =>
                        {
                            b1.Property<string>("UtilizadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("myCity")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UtilizadorId");

                            b1.ToTable("Utilizador");

                            b1.WithOwner()
                                .HasForeignKey("UtilizadorId");
                        });

                    b.OwnsOne("_21s5_df_32_proj.Domain.Utilizadores.UtilizadorDataNascimento", "DataNascimento", b1 =>
                        {
                            b1.Property<string>("UtilizadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("MyUtilizadorDataNascimento")
                                .HasColumnType("datetime2");

                            b1.HasKey("UtilizadorId");

                            b1.ToTable("Utilizador");

                            b1.WithOwner()
                                .HasForeignKey("UtilizadorId");
                        });

                    b.OwnsOne("_21s5_df_32_proj.Domain.Utilizadores.UtilizadorDescricao", "Descricao", b1 =>
                        {
                            b1.Property<string>("UtilizadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("MyDescricao")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UtilizadorId");

                            b1.ToTable("Utilizador");

                            b1.WithOwner()
                                .HasForeignKey("UtilizadorId");
                        });

                    b.OwnsOne("_21s5_df_32_proj.Domain.Utilizadores.UtilizadorEmail", "Email", b1 =>
                        {
                            b1.Property<string>("UtilizadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("MyUtilizadorEmail")
                                .HasColumnType("nvarchar(450)");

                            b1.HasKey("UtilizadorId");

                            b1.HasIndex("MyUtilizadorEmail");

                            b1.ToTable("Utilizador");

                            b1.WithOwner()
                                .HasForeignKey("UtilizadorId");
                        });

                    b.OwnsOne("_21s5_df_32_proj.Domain.Utilizadores.UtilizadorNome", "Nome", b1 =>
                        {
                            b1.Property<string>("UtilizadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("MyName")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UtilizadorId");

                            b1.ToTable("Utilizador");

                            b1.WithOwner()
                                .HasForeignKey("UtilizadorId");
                        });

                    b.OwnsOne("_21s5_df_32_proj.Domain.Utilizadores.UtilizadorNumTelemovel", "NumTelemovel", b1 =>
                        {
                            b1.Property<string>("UtilizadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("NumTelemovel")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UtilizadorId");

                            b1.ToTable("Utilizador");

                            b1.WithOwner()
                                .HasForeignKey("UtilizadorId");
                        });

                    b.OwnsOne("_21s5_df_32_proj.Domain.Utilizadores.UtilizadorPais", "Pais", b1 =>
                        {
                            b1.Property<string>("UtilizadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("MyPais")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UtilizadorId");

                            b1.ToTable("Utilizador");

                            b1.WithOwner()
                                .HasForeignKey("UtilizadorId");
                        });

                    b.OwnsOne("_21s5_df_32_proj.Domain.Utilizadores.UtilizadorPassword", "Password", b1 =>
                        {
                            b1.Property<string>("UtilizadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("MyUtilizadorPassword")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UtilizadorId");

                            b1.ToTable("Utilizador");

                            b1.WithOwner()
                                .HasForeignKey("UtilizadorId");
                        });

                    b.OwnsOne("_21s5_df_32_proj.Domain.Utilizadores.UtilizadorPontuacao", "Pontuacao", b1 =>
                        {
                            b1.Property<string>("UtilizadorId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("MyUtilizadorPontuacao")
                                .HasColumnType("int");

                            b1.HasKey("UtilizadorId");

                            b1.ToTable("Utilizador");

                            b1.WithOwner()
                                .HasForeignKey("UtilizadorId");
                        });

                    b.Navigation("Avatar");

                    b.Navigation("Cidade");

                    b.Navigation("DataNascimento");

                    b.Navigation("Descricao");

                    b.Navigation("Email");

                    b.Navigation("EstadoHumor");

                    b.Navigation("Nome");

                    b.Navigation("NumTelemovel");

                    b.Navigation("Pais");

                    b.Navigation("Password");

                    b.Navigation("Pontuacao");
                });

            modelBuilder.Entity("_21s5_df_32_proj.Domain.Tags.Tag", b =>
                {
                    b.Navigation("TagUtilizadores");
                });

            modelBuilder.Entity("_21s5_df_32_proj.Domain.Utilizadores.Utilizador", b =>
                {
                    b.Navigation("TagUtilizadores");
                });
#pragma warning restore 612, 618
        }
    }
}
